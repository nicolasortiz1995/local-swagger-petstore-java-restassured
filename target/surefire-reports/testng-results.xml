<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-03T05:16:53 COT" name="Surefire suite" finished-at="2025-02-03T05:16:59 COT" duration-ms="5914">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-02-03T05:16:53 COT" name="Surefire test" finished-at="2025-02-03T05:16:59 COT" duration-ms="5914">
      <class name="runners.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:53 COT" name="setUpClass" finished-at="2025-02-03T05:16:54 COT" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7488c183]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:54 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="2393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create, retrieve, log in, and log out a user in one test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["End-to-End User Management in the Swagger Petstore API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["The user successfully adds a pet with a valid ID 1"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pets in the Swagger Petstore API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["The user successfully adds a pet with a valid ID 2"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pets in the Swagger Petstore API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update an existing pet"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pets in the Swagger Petstore API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["The user successfully deletes a pet with ID 2"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pets in the Swagger Petstore API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pets by tags"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pets by tags with an invalid tag"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pets by status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pets by status with an invalid status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pet by ID with a valid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-03T05:16:57 COT" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find pet by ID with an invalid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Search pets by various criteria"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.TestRunner@4426bff1]" started-at="2025-02-03T05:16:57 COT" name="tearDownClass" finished-at="2025-02-03T05:16:59 COT" duration-ms="2306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
